class Solution {
    public List<List<Integer>> shiftGrid(int[][] grid, int k) {
        
        for(; k > 0; k--){
            int p = grid[grid.length-1][grid[0].length-1];
            
            for(int i = 0; i < grid.length; i++){
                for(int j = 0; j< grid[0].length; j++){
                    int temp = grid[i][j];
                    grid[i][j] = p;
                    p = temp;
                }
            }
        }
        
        List<List<Integer>> result = new ArrayList<>();
        for (int[] row : grid) {
            List<Integer> listRow = new ArrayList<>();
            result.add(listRow);
            for (int v : row) listRow.add(v);
        }
        return result;
    }
}


class Solution {
    public List<List<Integer>> shiftGrid(int[][] grid, int k) {
        
        int m = grid.length;
        int n = grid[0].length;
        int index = 0;
        int[] temp = new int[m*n];
        
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                k %= n*m;
                temp[k] = grid[i][j];
                k++;
            }
        }
        
        List<List<Integer>> result = new ArrayList<>(m);
        for (int i = 0; i < m; i++){
            List<Integer> listRow = new ArrayList<>(n);
            for(int j = 0; j < n; j++){
                listRow.add(temp[index++]);
            }
           result.add(listRow);
        }
        return result;
    }
}
