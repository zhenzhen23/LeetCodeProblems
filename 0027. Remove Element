//Runtime: 0 ms, faster than 100.00% of Java online submissions for Remove Element.         O(n)
//Memory Usage: 37.7 MB, less than 49.56% of Java online submissions for Remove Element.    O(1)

class Solution {
    public int removeElement(int[] nums, int val) {
        
        int pointer = 0;
        
        for(int i = 0; i < nums.length; ++i){
            if(nums[i] != val){
                nums[pointer] = nums[i];
                pointer++;
            }
        }
        return pointer;
    }
}

//Runtime: 0 ms, faster than 100.00% of Java online submissions for Remove Element.
//Memory Usage: 39.8 MB, less than 8.28% of Java online submissions for Remove Element.

class Solution {
    public int removeElement(int[] nums, int val) {
        
        int left = 0;
        int right = nums.length - 1;
        
        while(left <= right){
            if(nums[left] != val){
                left++;
            }else{
                nums[left] = nums[right];
                right--;
            }
        }
        return left;
    }
}
